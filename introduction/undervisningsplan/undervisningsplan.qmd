---
title: "Undervisningsplan"
format:
  revealjs:
        theme: simple
        footer: '[MSB105](/index.html)'
        reveal_options:
        code-fold: show
        incremental: true
        smaller: true
        scrollable: true
        slide-number: c/t
editor: visual
editor_options:
  markdown:
    wrap: 72
    canonical: true
    chunk_output_type: console
echo: true
eval: true
---

## Loading some R libraries

```{r setup, echo=TRUE}
library(tidyverse)
library(readr)
```

## Oppstart

-   Svært intensivt i starten.

-   Vi må ha lært en del R før André starter med økonometri.

-   De mer utfordrene tingene kommer mot slutten av kurset. Da kjører vi
    med redusert fart.

## Opplegg for kurset

-   Ingen eksamen, bestått/ikke bestått ut fra produksjon undervegs

-   Jevnlig mindre prosjekt som skal skrives og leveres

    -   Grupper på 2.

        -   Samarbeid vha. versjonskontrollsystem; git og Github

    -   Ikke godt nok; tilbakemelding med sjanse til å forbedre

        -   Fremdeles ikke godt nok, ny oppgave med kort frist (mye mer
            arbeid både for dere og meg. Håper vi ungår dette)

## Opplegg for kurset

-   Avsluttende termpaper mot slutten av kurset

-   Jeg hjelper det jeg kan.

## Opplegg for kurset

-   Mitt opplegg for kurset er inspirert av disse to:

    -   ![trump](trump.png) og
    -   ![benito](benito.png)

## Opplegg for kurset

::: columns
::: {.column width="60%"}
-   Jeg kommer til å lyve ;-)

    -   Snarere ikke fortelle hele sannheten
    -   Når jeg mener det hjelper på forståelsen
:::

::: {.column width="40%"}
![TFG](trump.png){fig-align="center"}
:::
:::

## Opplegg for kurset

::: columns
::: {.column width="60%"}
-   

    -   Jeg bestemmer, f.eks

        -   Vi vil skrive R-kode iht. [«The tidyverse style
            guide»](https://style.tidyverse.org)

    -   Der det er valg bestemmer jeg også ;-), f.eks

        -   «snake case» for R objekter (dette_er_snake_case)
        -   «kebab case» for filnavn (mitt-fine-filnavn.txt)

    -   Altså når «The tidyverse style guide» gir ulike valg så vil jeg,
        med diktatorisk makt, velge
:::

::: {.column width="40%"}
![Benito](benito.png){fig-align="center"}
:::
:::

## Pensum

Vi vil i hovedsak benytte [R for Data Science](https://r4ds.had.co.nz).

![Cover R for Data Science](cover.png){fig-align="left" width="308"}

## Undervisningsplan; Quarto Document

Jeg vil komme tilbake med en mer detaljert undervisningsplan når vi har
kommet skikkelig i gang

-   Installasjon av nødvendig programvare

-   Introduksjon til **Quarto Document** (før brukte vi R notebook)

    -   Skrive et **Quarto Document**, minimalt med R kode. Bruke
        markdown. peer review.
    -   Bruke R studio project ([r4ds: 8 Workflow:
        projects](https://r4ds.had.co.nz/workflow-projects.html))
    -   Tar dette først s.a. vi kan skrive R kode Quarto dokumenter

-   Intensivkurs R

## Underv.-plan; Version Control System (VCS)

-   Hvorfor versjonskontroll?

    -   Backup

    -   Kontroll på versjoner

    -   Samarbeid

    -   Kan enkelt gå tilbake til tidligere versjoner av dokumentene

        -   Komplett «history» av «commits»

    -   Utviklingen av dokumentet/analysen vil ha en komplett
        log/historie

    -   Verktøy git/Github/(gitaHead)

## Undervisningsplan; git/Github

-   Introduksjon til git/Github

    -   Oppdatere **Quarto Document** utfra tilbakemeldinger vha.
        git/Github
    -   Samarbeid vha. Github. Benytte git/Github til å lage en ny
        versjon som er en kombinasjon av det beste fra de to **Quarto
        Document**-ene

-   ggplot2, reproduserbare plot ([r4ds: 3 Data
    visualisation](https://r4ds.had.co.nz/data-visualisation.html)) og
    tibbles ([r4ds: 10 Tibbles](https://r4ds.had.co.nz/tibbles.html)).

## Undervisningsplan; Datatransform.

-   Data transformasjoner ([r4ds: 5 Data
    transformation](https://r4ds.had.co.nz/transform.html))

    -   Les også kjapt gjennom kap. 4 og 6. Små kap.
        -   Noe er ikke direkte relevant for oss, men kjekt å kjenne til
    -   «pipe»: `%>%` ([r4ds: 18
        Pipes](https://r4ds.had.co.nz/pipes.html))
        -   Vi vil skrive kode vha. «pipes» helt fra starten
    -   pakken `dplyr` (en del av `tidyverse`)
    -   funksjonene: `tibble()`, `filter()`, `arrange()`, `select()`,
        `mutate()`, `rename()`, `summarise()` og `group_by()`

## Undervisningsplan; Utforskende dataanalyse

-   Utforskende dataanalyse ([r4ds: 7 Exploratory Data
    Analysis](https://r4ds.had.co.nz/exploratory-data-analysis.html))

    -   Få en forståelse av dataene

        -   variasjon
        -   sentralitet
        -   utliggere
        -   symmetri/skjevhet
        -   manglende verdier
        -   kovariasjon mellom variabler

## Undervisningsplan; import/eksport av data

-   Import/export av data ([r4ds: 11 Data
    import](https://r4ds.had.co.nz/data-import.html))

    -   `readr` lese/skrive diverse tekstformat (csv, tsv, fwf etc.)
    -   `readxl` leser excel regneark
    -   `writexl` skriver xlsx filer (ikke en del av Tidyverse)
    -   Nytt prosjekt, grupper på to, samarbeid via git/Github
        -   Bruk av «branches»
        -   Gapminder datasett

-   Import av data vha. API. Pakken PxWebApiData gjør at vi kan hente
    data direkte fra SSBs server rett inn i vårt R dokument.

## Undervisningsplan; Ryddige («Tidy») data

-   Langt og vidt dataformat

    -   `pivot_longer()` fra wide til long
    -   `pivot_wider()` fra long til wide
    -   `separate()/unite()`
    -   missing values, `fill()`

## Eksempel wide format

-   Vi henter ofte dataene i wide format.
-   Må konverteres til long format for å kunne brukes i statistiske
    rutiner

```{r, echo=TRUE}
# Leser inn csv fil med data
RegHeltLedige_w <- read_csv("RegHeltLedige_w.csv")
# Heller dataene inn i en pipe
RegHeltLedige_w %>% 
# Plukker ut tre måneder rundt årsskiftet
  select(knrNavn, `2013M12`, `2014M01`, `2014M02`)
```

## Eksempel long format

```{r, echo=TRUE}
# Leser inn csv fil med data
RegHeltLedige_l <- read_csv("RegHeltLedige_l.csv")
# Heller dataene inn i en pipe
RegHeltLedige_l %>% 
# Plukker ut tre måneder rundt årsskiftet
  filter(
    (year == 2013 & month %in% c("12")) |
      (year == 2014 & month %in% c("01", "02"))
  ) 
```

-   Dette kommer vi til å jobbe mye med

## Undervisningsplan fortsettelse

-   Kombinere tabeller ([r4ds: 13 Relational
    data](https://r4ds.had.co.nz/relational-data.html))

    -   en del av `dplyr` pakken
    -   `join`s (dplyrs `merge`) Sette sammen tabeller vha. felles
        nøkkel

-   Tekststrenger ([r4ds: 14
    Strings](https://r4ds.had.co.nz/strings.html))

    -   `stringr` pakken
    -   regular expressions

-   Factorer ([r4ds: 15 Factors](https://r4ds.had.co.nz/factors.html))

    -   `forcats`
    -   factorvariabler (diskrete kategorier) i **Tidyverse**

## Undervisningsplan fortsettelse

-   Funksjoner og vektorer ([r4ds: 19
    Functions](https://r4ds.had.co.nz/functions.html), [r4ds: 20
    Vectors](https://r4ds.had.co.nz/vectors.html))

    -   Skrive enkle funksjoner
    -   Litt mer om R's vektorer

-   Iterasjon ([21 Iteration](https://r4ds.had.co.nz/iteration.html))

    -   Løkker (`for`, `while` etc)

    -   `maps` (fra `purrr` pakken i **Tidyverse**)

        -   bruke funksjonen på hvert element i en liste
        -   Rs alternativ til iterasjon
        -   Rs foretrukne måte å gjøre ting
            -   ofte raskere

            -   mer elegant

## Undervisningsplan fortsettelse

-   (lineære) modeller ([r4ds: 23 Model
    basics](https://r4ds.had.co.nz/model-basics.html))

-   utvikling av modeller ([r4ds: 24 Model
    building](https://r4ds.had.co.nz/model-building.html))

-   mange modeller ([r4ds: 25 Many
    models](https://r4ds.had.co.nz/many-models.html))

    -   `broom` pakken
    -   utrolig effektiv teknikk, men også krevende datastrukturer

```{r}
#| echo: false
```
