Structured dynamic documents
========================================================
author: Arnstein Gjestlannd
autosize: true
incremental: true
transition: fade
width: 864
height: 486

Where to get more informations
========================================================
>- [r4ds](https://r4ds.had.co.nz/r-markdown.html)
>- [Markdown](https://bookdown.org/yihui/rmarkdown/)
>- Help menu in RStudio

Why Markdown?
========================================================
>- Easy to learn (manual 3-4 pages)
>- Flexible, can easily be converted into other formats like pdf (via latex), docx (MS Word), html etc.
>- cross platform (mac, windows, Linux)
>- plain text, facilitates use of distributed version control systems (support for git/github in RStudio)

Why RMarkdown?
========================================================

>- RMarkdown is Markdown with support for R code (via knitr)
>- Rmarkdown documents can include R code (“statistics”) that is executed. Ex. Plots, Tables, Models, Tests
>- Reproducible research (“The Golden Standard”)


Examples
========================================================
>-
```{r}
summary(cars)
```


Examples
========================================================

```{r out.width = '50%'}
plot(cars)
```

Why RMarkdown? cont.
========================================================

## Ex. R code

```{r}
names(cars)
fivenum(cars$speed)
```

Why RMarkdown? cont.
========================================================

## Ex. R code

```{r}
summary(cars)
```

Why RMarkdown? cont.
========================================================

## What happened?

>- R was first run on the **R code** parts of our document and the package `knitr` converted the code and the results into **RMarkdown** chunks (pure Markdown) which was then inserted into our original **Markdown** document. The resulting **Markdown** document was then converted to **html** by `pandoc`.

Our Tools
========================================================

>- R, a statistical programming language (free implementation of the language S)
>- The “Lingua Franca” of the statisticians
  >- 15000+ packages
  >- New tests/rutines often debut as R packages

Relevant packages
========================================================

>- Packages especially relevant  for us:
  >- `knitr`
  >- `RMarkdown`
  >- GGplot2
  >- The `tidyverse` packages
  >- Later on: sp* and sf* packages to handle spatial data

Our Tools cont.
========================================================

>- RStudio (Free version, no offical support)
  >- IDE (Integrated Developer Environment) for all thing R related
  >- Crossplatform (mac, windows, linux)

Our Tools cont.
========================================================

<div style="width:90%"><img alt='RStudio Screen Shot', src ='figures/rstudioSS.png'></img></div>

Our Tools cont.
========================================================

>- LaTeX, used for pdf and math, ex. `\sum_{i=1}^I x_i` gives
$$\sum_{i=1}^I x_i$$
>- pandoc
  >- Works in the background and converts Markdown to different formats pdf(via latex), docx, html etc.

More on RStudio
========================================================


<div style="width:90%"><img alt='RStudio Screen Shot', src ='figures/rstudioSS.png'></img></div>

More on RStudio cont.
========================================================
left:70%



![Rstudio Screen Shot](figures/rstudioSS.png)

***
>- **Upper left:** Editor
>- **Lower left:** Console and Terminal
>- **Upper right:** History, Environment, git and Presentation viewer
>- **Lower right:** Files, Plots, Packages and Help

R code style guide
========================================================
left: 65%
_
>- Best way to avoid bad habits …
>- is to never aquire them in the first place

## Rcode style guide
>- `install.packages("styler")`
   >- package that install an add-in that makes it easy to style code according to tidyverse style guide
>- The [Tidyverse style guide.](https://style.tidyverse.org)

***

![add-in menu](figures/addinmenu.png)
